import org.apache.tools.ant.filters.FixCrLfFilter
plugins {
  	id 'nebula.ospackage' version '4.10.0'
  	id 'ivy-publish'  
  	id 'com.jfrog.artifactory' version '4.7.3'
}
project.ext {
	serviceName = "jadas"
	javaDist = "jdk-8u191-linux-x64.tar.gz"
	javaDir = "jdk1.8.0_191"
	distRepoUrl = "${mavenRepoBaseUrl}/apgPlatformDependencies"
}

def jenkinsNodeName = "apg-jenkins-${serviceName}-node"
def jenkinsNodeDir = "/var/opt/${jenkinsNodeName}"

task copyRpmScripts (type: Copy) {
	from "packageing/rpm"
	into "${buildDir}/rpm"
	include "**/*.sh"
	expand(jenkinsNodeDir:jenkinsNodeDir,jenkinsNodeName:jenkinsNodeName,javaDist:javaDist,distRepoUrl:distRepoUrl)
  	filteringCharset = 'UTF-8'
}

task copyRpmResources(type: Copy) {
	from "packageing/profile"
	into "${buildDir}/resources"
	include "**/*"
	expand(jenkinsNodeName:jenkinsNodeName,javaDist:javaDist,distRepoUrl:distRepoUrl)
   	filter(FixCrLfFilter.class,eol:FixCrLfFilter.CrLf.newInstance("lf"))
  	filteringCharset = 'UTF-8'
}
 
ospackage {
	packageName = "${jenkinsNodeName}"
	version = "0.6"
	release = 1
	os = LINUX
	type = BINARY
	arch = NOARCH
	user "root"
	preInstall file("${buildDir}/rpm/pre-install.sh")
	postInstall file("${buildDir}/rpm/post-install.sh")
    postUninstall file("${buildDir}/rpm/post-uninstall.sh")
   
    from("${buildDir}/resources") {
		into "${jenkinsNodeDir}"
	}
}

buildRpm {
	directory("${jenkinsNodeDir}", 0775 )
	directory("${jenkinsNodeDir}/work", 0775)
	link("${jenkinsNodeDir}/jdk", "${jenkinsNodeDir}/${javaDir}")
}

repositories {
	maven { 
		credentials {
	        username "$mavenRepoUser"
	        password "$mavenRepoPwd"
	    }
		url "${mavenRepoBaseUrl}/yumrepodev" 
	}
}

publishing {
	publications {
		yumRpm(IvyPublication) {
			artifact buildRpm.outputs.getFiles().getSingleFile()
		}
	}
}

artifactory {
    contextUrl = "${mavenRepoBaseUrl}"  
    publish {
        repository {
            repoKey = "yumrepodev"   
            username = "${mavenRepoUser}"
            password = "${mavenRepoPwd}"
            ivy {
                 artifactLayout = "${buildRpm.outputs.getFiles().getSingleFile().getName()}"
            }
        }
        defaults {
            publications ('yumRpm')
            publishBuildInfo = false  
            publishArtifacts = true   
            publishPom = false   
            publishIvy = false  
        }
    }
}
buildRpm {dependsOn copyRpmScripts, copyRpmResources}
artifactoryPublish {dependsOn buildRpm}